// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource mysql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "mysql"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  name      String    @default("")
  email     String    @unique @default("")
  password  String
  posts     Post[]    @relation("Post_author")
  createdAt DateTime? @default(now())
}

model Resume {
  id        String @id @default(cuid())
  title     String @default("")
  company   String @default("")
  date      String @default("")
  startYear Int?
  endYear   Int?
  role1     String @default("")
  role2     String @default("")
  role3     String @default("")
  role4     String @default("")
  role5     String @default("")
}

model Skill {
  id        String @id @default(cuid())
  skillName String @default("")
  level     Int?
}

model Coursework {
  id          String  @id @default(cuid())
  name        String  @default("")
  course      String  @default("")
  description String  @default("")
  author      String  @default("")
  link        String  @default("")
  photo       Photo?  @relation("Coursework_photo", fields: [photoId], references: [id])
  photoId     String? @unique @map("photo")
}

model Education {
  id       String  @id @default(cuid())
  name     String  @default("")
  title    String  @default("")
  location String  @default("")
  time     String  @default("")
  photo    Photo[] @relation("Education_photo")
}

model Portfolio {
  id         String       @id @default(cuid())
  title      String       @default("")
  p1         String       @default("") @mysql.VarChar(500)
  p2         String       @default("") @mysql.VarChar(500)
  p3         String       @default("") @mysql.VarChar(500)
  repo       String       @default("")
  liveSite   String       @default("")
  photo      Photo?       @relation("Photo_portfolioPhoto")
  technology Technology[] @relation("Portfolio_technology")
}

model Technology {
  id        String      @id @default(cuid())
  name      String      @default("")
  typeLink  String      @default("")
  portfolio Portfolio[] @relation("Portfolio_technology")
}

model Photo {
  id               String      @id @default(cuid())
  image            Json?
  altText          String      @default("")
  portfolioPhoto   Portfolio?  @relation("Photo_portfolioPhoto", fields: [portfolioPhotoId], references: [id])
  portfolioPhotoId String?     @unique @map("portfolioPhoto")
  educationPhoto   Education[] @relation("Education_photo")
  coursePhoto      Coursework? @relation("Coursework_photo")
}

model Post {
  id       String  @id @default(cuid())
  title    String  @default("")
  summary  String  @default("") @mysql.VarChar(500)
  slug     String  @default("")
  date     String  @default("")
  content  Json    @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  author   User?   @relation("Post_author", fields: [authorId], references: [id])
  authorId String? @map("author")
  tags     Tag[]   @relation("Post_tags")

  @@index([slug])
  @@index([authorId])
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  posts Post[] @relation("Post_tags")
}
